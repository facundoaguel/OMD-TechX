@page "/guardias"

@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Identity.UI.Services;
@inject HttpClient http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject UserManager<IdentityUser> UserManager
@using OMD_TechX.Helpers;
@inject IJSRuntime JS
@using System.Globalization

<div class="row align-items-center">
    <div class="col-8">
        <h1>Guardias</h1>
        
    </div>
    <div class="col" style="margin-right:10px">
        <select class="form-select" style="width:200px" aria-label="Default select example" @onchange="CargarCalendario">
            @foreach (string nombreMes in mesesNames)
            {
                <option>@nombreMes</option>
            }
        </select>
    </div>
    <div class="col" style="text-align:right">
        <input type="button" class="btn btn-success" style="background-color: #28567A" value="Actualizar" @onclick ="() => ActualizarCalendario()">
    </div>
</div>
<hr />

<table class="table table-bordered table-striped"> 
    <thead>
        <tr>
            @for (var indexDia = 0; indexDia < dias.Count(); indexDia++)
            {
                <th>
                    @dias[indexDia]
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @for(var indexSemana = 0; indexSemana < semanas.Count; indexSemana++)
        {
            <tr>
                @for (var indexDia = 0; indexDia < semanas[indexSemana].Dias.Count; indexDia++)
                {
                    var semIndex = indexSemana;
                    var diaIndex = indexDia;

                    <td>
                        @semanas[semIndex].Dias[diaIndex].FechaValue
                        <br /><br />

                        <label style="color:#C00;font-weight:bold">@semanas[indexSemana].Dias[indexDia].VetDeTurno</label>
                        <br /><br />

                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@code{
    List<string> mesesNames = new List<string>();
    List<string> dias = new List<string>();
    List<Semana> semanas = new List<Semana>();
    DateTime fechaInicio = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1);
    DateTime fechaFin = (new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1)).AddMonths(1).AddDays(-1);

    protected override async Task OnInitializedAsync()
    {
        mesesNames = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.MonthGenitiveNames.ToList();
        await CargarCalendarioHead();
        await CargarCalendarioBody();
    }

    public async Task CargarCalendario(ChangeEventArgs e)
    {
        var mes = e.Value.ToString();
        int indexMes = DateTime.ParseExact(mes, "MMMM", System.Globalization.CultureInfo.CreateSpecificCulture("es-GB")).Month;
        fechaInicio = new DateTime(DateTime.Now.Year, indexMes, 1);
        fechaFin = (new DateTime(DateTime.Now.Year, indexMes, 1)).AddMonths(1).AddDays(-1);

        await CargarCalendarioHead();
        await CargarCalendarioBody();
    }

    public async Task CargarCalendarioHead()
    {
        var dia1 = new List<string>();

        for(var dt = fechaInicio; dt <= fechaFin; dt = dt.AddDays(1))
        {
            dia1.Add(dt.ToString("dddd"));
            dias = dia1.Distinct().ToList();
        }
    }

    public async Task CargarCalendarioBody()
    {
        semanas = new List<Semana>();

        int flag = 0;
        Semana semana = new Semana();

        List<Dia> fechas = new List<Dia>();
        var diasTotales = (int)(fechaFin - fechaInicio).TotalDays;
        int coundays = 0;

        for(var dt = fechaInicio; dt <= fechaFin; dt = dt.AddDays(1))
        {
            flag++;

            fechas.Add(new Dia()
                {
                    FechaValue = dt.ToString("dd-MMM-yyyy"),
                    DiaName = dt.ToString("dddd")
                });

            if(flag == 7)
            {
                semana = new Semana();
                semana.Dias = fechas;
                semanas.Add(semana);

                fechas = new List<Dia>();
                flag = 0;
            }
            if(coundays == diasTotales)
            {
                semana = new Semana();
                semana.Dias = fechas;
                semanas.Add(semana);
                break;
            }
            coundays++;
        }
    }

    public async Task ActualizarCalendario()
    {
        List<string> veterinarias = new List<string>();
        veterinarias.Add("Oh My Dog!");
        veterinarias.Add("Perritos love");
        veterinarias.Add("Pet's home");
        veterinarias.Add("Doggy");

        for(var i = 0; i<12; i++)
        {
            fechaInicio = new DateTime(DateTime.Now.Year, i, 1);
            fechaFin = (new DateTime(DateTime.Now.Year, i, 1)).AddMonths(1).AddDays(-1);

            for(var j = 0; j< 4; j++)
            {
                
            }

            //----------------------------------------------------------------
        }
    }
}